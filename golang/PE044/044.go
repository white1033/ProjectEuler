// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
//
// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
//
// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
//
// Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

package main

import (
	"fmt"
	"math"
)

func IsPentagonal(n int) bool {
	tmp := (math.Sqrt(1+24*float64(n)) + 1) / 6
	if tmp == math.Trunc(tmp) {
		return true
	}
	return false
}

func main() {
	nums := []int{1}
OUTSIDE:
	for i := 1; ; i++ {
		tmp := (3*i - 1) * i / 2
		nums = append(nums, tmp)
		for _, v := range nums {
			if IsPentagonal(tmp+v) && IsPentagonal(tmp-v) {
				fmt.Printf("%d\n", tmp-v)
				break OUTSIDE
			}
		}
	}
}
